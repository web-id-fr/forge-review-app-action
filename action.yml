name: 'Forge Review-app Action'
description: 'Create/update and deploy a review-application to Laravel Forge'
author: 'rygilles'

branding:
  icon: upload-cloud
  color: green

inputs:
  forge_api_token:
    description: 'Laravel Forge API key'
    required: true
  forge_server_id:
    description: 'Laravel Forge server ID'
    required: true
  root_domain:
    description: 'Root domain under which to create review-app site'
    required: false
  host:
    description: 'Site host of the review-app'
    required: false
  prefix_with_pr_number:
    description: 'Use the pull-request number as host and database prefix when host is not manually defined'
    required: false
    default: 'true'
  fqdn_prefix:
    description: 'Prefix the whole FQDN (e.g.: "app.")'
    required: false
  project_type:
    description: 'Project type of the review-app'
    required: false
    default: 'php'
  directory:
    description: 'Root directory for nginx configuration of the review-app'
    required: false
    default: '/public'
  isolated:
    description: 'Isolate review-app site'
    required: false
    default: 'false'
  php_version:
    description: 'PHP version of the review-app site'
    required: false
    default: 'php81'
  create_database:
    description: 'Create database for review-app'
    required: false
    default: 'false'
  database_user:
    description: 'Database user of the review-app site'
    required: false
    default: 'forge'
  database_password:
    description: 'Database password of the review-app site'
    required: false
  database_name:
    description: 'Database name of the review-app site'
    required: false
  database_name_prefix:
    description: 'Database name prefix, useful for PostgreSQL that does not support digits (PR number) for first chars'
  nginx_template:
    description: 'Nginx template to use (default template if not defined)'
    required: false
  configure_repository:
    description: 'Configure repository on review-app site'
    required: false
    default: 'true'
  repository_provider:
    description: 'Repository provider of review-app site'
    required: false
    default: 'github'
  repository:
    description: 'Repository of review-app site'
    required: false
  branch:
    description: 'Git branch to use'
    required: false
  composer:
    description: 'Composer install on repository setup'
    required: false
    default: 'false'
  letsencrypt_certificate:
    description: 'Obtain LetsEncrypt certificate for the review-app site'
    required: false
    default: 'true'
  certificate_setup_timeout:
    description: 'Maximum wait time in seconds for obtaining the certificate'
    required: false
    default: '120'
  env_stub_path:
    description: '.env stub file path inside git repository'
    required: false
    default: '.github/workflows/.env.stub'
  deploy_script_stub_path:
    description: 'Deploy script stub file path inside the git repository'
    required: false
    default: '.github/workflows/deploy-script.stub'
  deployment_timeout:
    description: 'Maximum wait time in seconds for deploying'
    required: false
    default: '120'
  deployment_auto_source:
    description: 'Whether to automatically source environment variables into the deployment script'
    required: false
    default: 'true'
  create_worker:
    description: 'Create site worker'
    required: false
    default: 'false'
  worker_connection:
    description: 'Worker connection (if creation is requested)'
    required: false
    default: 'redis'
  worker_timeout:
    description: 'Worker timeout in seconds (if creation is requested)'
    required: false
    default: '90'
  worker_sleep:
    description: 'Worker sleep in seconds (if creation is requested)'
    required: false
    default: '60'
  worker_tries:
    description: 'Worker maximum tries (if creation is requested)'
    required: false
  worker_processes:
    description: 'Worker processes (if creation is requested)'
    required: false
    default: '1'
  worker_stopwaitsecs:
    description: 'Worker stop wait secs (if creation is requested)'
    required: false
    default: '600'
  worker_php_version:
    description: 'Worker PHP version (if creation is requested). `php_version` input value will be used if not defined'
    required: false
  worker_daemon:
    description: 'Worker "daemon" (if creation is requested)'
    required: false
    default: 'true'
  worker_force:
    description: 'Worker "force" (if creation is requested)'
    required: false
    default: 'false'
  worker_queue:
    description: 'Worker queue (if creation is requested). Default queue will be used if not defined.'
    required: false
  horizon_enabled:
    description: 'Enable Laravel Horizon integration'
    required: false
    default: 'false'
  scheduler_enabled:
    description: 'Enable Laravel Scheduler integration'
    required: false
    default: 'false'
  quick_deploy_enabled:
    description: 'Enable quick deployment trigger'
    required: false
    default: 'false'

outputs:
  host:
    description: 'Host of the review-app (generated or forced one in inputs)'
    value: ${{ steps.forge-review-app-action.outputs.host }}
  database_name:
    description: 'Database name of the review-app (generated or forced one in inputs)'
    value: ${{ steps.forge-review-app-action.outputs.database_name }}
  site_id:
    description: 'Forge site ID of the review-app'
    value: ${{ steps.forge-review-app-action.outputs.site_id }}
  worker_id:
    description: 'Worker ID'
    value: ${{ steps.forge-review-app-action.outputs.worker_id }}

runs:
  using: 'composite'
  steps:
    - name: "Extract Docker image version"
      id: extract-version
      shell: bash
      run: |
        # Extract version from github.action_ref
        # Example: "web-id-fr/forge-review-app-action@v1.3.2" -> "v1.3.2"
        if [[ "${{ github.action_ref }}" == *"@"* ]]; then
          VERSION="${{{ github.action_ref }}#*@}"
        else
          VERSION="latest"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Using Docker image version: $VERSION"

    - name: "Forge Review-app Action"
      id: forge-review-app-action
      uses: "docker://ghcr.io/web-id-fr/forge-review-app-action:${{ steps.extract-version.outputs.version }}"
      env:
        INPUT_FORGE_API_TOKEN: ${{ inputs.forge_api_token }}
        INPUT_FORGE_SERVER_ID: ${{ inputs.forge_server_id }}
        INPUT_ROOT_DOMAIN: ${{ inputs.root_domain }}
        INPUT_HOST: ${{ inputs.host }}
        INPUT_PREFIX_WITH_PR_NUMBER: ${{ inputs.prefix_with_pr_number }}
        INPUT_FQDN_PREFIX: ${{ inputs.fqdn_prefix }}
        INPUT_PROJECT_TYPE: ${{ inputs.project_type }}
        INPUT_DIRECTORY: ${{ inputs.directory }}
        INPUT_ISOLATED: ${{ inputs.isolated }}
        INPUT_PHP_VERSION: ${{ inputs.php_version }}
        INPUT_CREATE_DATABASE: ${{ inputs.create_database }}
        INPUT_DATABASE_USER: ${{ inputs.database_user }}
        INPUT_DATABASE_PASSWORD: ${{ inputs.database_password }}
        INPUT_DATABASE_NAME: ${{ inputs.database_name }}
        INPUT_DATABASE_NAME_PREFIX: ${{ inputs.database_name_prefix }}
        INPUT_NGINX_TEMPLATE: ${{ inputs.nginx_template }}
        INPUT_CONFIGURE_REPOSITORY: ${{ inputs.configure_repository }}
        INPUT_REPOSITORY_PROVIDER: ${{ inputs.repository_provider }}
        INPUT_REPOSITORY: ${{ inputs.repository }}
        INPUT_BRANCH: ${{ inputs.branch }}
        INPUT_COMPOSER: ${{ inputs.composer }}
        INPUT_LETSENCRYPT_CERTIFICATE: ${{ inputs.letsencrypt_certificate }}
        INPUT_CERTIFICATE_SETUP_TIMEOUT: ${{ inputs.certificate_setup_timeout }}
        INPUT_ENV_STUB_PATH: ${{ inputs.env_stub_path }}
        INPUT_DEPLOY_SCRIPT_STUB_PATH: ${{ inputs.deploy_script_stub_path }}
        INPUT_DEPLOYMENT_TIMEOUT: ${{ inputs.deployment_timeout }}
        INPUT_DEPLOYMENT_AUTO_SOURCE: ${{ inputs.deployment_auto_source }}
        INPUT_CREATE_WORKER: ${{ inputs.create_worker }}
        INPUT_WORKER_CONNECTION: ${{ inputs.worker_connection }}
        INPUT_WORKER_TIMEOUT: ${{ inputs.worker_timeout }}
        INPUT_WORKER_SLEEP: ${{ inputs.worker_sleep }}
        INPUT_WORKER_TRIES: ${{ inputs.worker_tries }}
        INPUT_WORKER_PROCESSES: ${{ inputs.worker_processes }}
        INPUT_WORKER_STOPWAITSECS: ${{ inputs.worker_stopwaitsecs }}
        INPUT_WORKER_PHP_VERSION: ${{ inputs.worker_php_version }}
        INPUT_WORKER_DAEMON: ${{ inputs.worker_daemon }}
        INPUT_WORKER_FORCE: ${{ inputs.worker_force }}
        INPUT_WORKER_QUEUE: ${{ inputs.worker_queue }}
        INPUT_HORIZON_ENABLED: ${{ inputs.horizon_enabled }}
        INPUT_SCHEDULER_ENABLED: ${{ inputs.scheduler_enabled }}
        INPUT_QUICK_DEPLOY_ENABLED: ${{ inputs.quick_deploy_enabled }}
